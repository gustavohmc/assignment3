#BlueJ class context
comment0.params=lotName
comment0.target=LamborghiniCarLot(java.lang.String)
comment0.text=\r\n\ Main\ constructor.\ Defines\ the\ name\ of\ the\ lot.\ Creates\ the\ inventory\ ArrayList\ object.\ Adds\ the\ Lamborghini\ objects\r\n\ @param\ lotName.\ String\ the\ name\ of\ the\ lot\ object.\ Can't\ be\ null\ or\ empty.\ If\ the\ value\ passed\ is\ \r\n\ "Taylor's\ Used\ Lambos",\ it\ should\ store\ "Jason's\ Used\ Lambos"\ instead\ \r\n
comment1.params=
comment1.target=LamborghiniCarLot()
comment1.text=\r\nconstructor.\ Creates\ the\ inventory\ ArrayList\r\n
comment10.params=lowHP\ highHP
comment10.target=Lamborghini[]\ getCarsWithHorsepowerRange(double,\ double)
comment10.text=\r\n\ a\ method\ to\ identify\ cars\ with\ horsepower\ within\ the\ provided\ range\r\n\ @param\ lowHP\ double.\ the\ lower\ end\ of\ the\ range.\ Needs\ to\ be\ between\ 300\ and\ 600\r\n\ @param\ highHP\ double.\ the\ higher\ end\ of\ the\ range.\ Needs\ to\ be\ between\ 300\ and\ 600\r\n\ @return\ result\ array.\ The\ collection\ of\ cars\ that\ match\ the\ conditions\r\n
comment11.params=modelName
comment11.target=boolean\ hasCarModel(java.lang.String)
comment11.text=\r\n\ checks\ if\ a\ passed\ model\ exists\ in\ the\ collection\r\n\ @param\ modelName\ String.\ can't\ be\ null.\ the\ model\ to\ be\ checked\r\n\ @return\ boolean.\ True\ if\ the\ car\ exists\ in\ the\ collection\r\n
comment12.params=modelYear
comment12.target=double\ getAverageHorsepowerOfYear(int)
comment12.text=\r\n\ calculates\ the\ average\ HP\ for\ all\ models\ in\ the\ provided\ year\r\n\ @param\ modelYear\ int.\ the\ year\ you\ wan\ to\ check\r\n\ @return\ avgHP\ double.\ The\ average\ HP\ of\ the\ models\ on\ that\ year\r\n
comment2.params=lotName
comment2.target=void\ setLotName(java.lang.String)
comment2.text=\r\n\ mutator\ for\ lotName\r\n\ @param\ lotName.\ String.\ Can't\ be\ null\ or\ empty\r\n
comment3.params=inventory
comment3.target=void\ setInventory(java.util.ArrayList)
comment3.text=\r\n\ mutator\ for\ inventory\r\n\ @param\ inventory.\ ArrayList\ of\ Lamborghini\ objects.\ \r\n
comment4.params=
comment4.target=java.lang.String\ getLotName()
comment4.text=\r\n\ accessor\ for\ lotName\r\n\ @return\ lotName.\ String\r\n
comment5.params=
comment5.target=java.util.ArrayList\ getInventory()
comment5.text=\r\n\ accessor\ for\ inventory\r\n\ @return\ ArrayList\ of\ Lamborghini\ objects\r\n
comment6.params=newLamborghini
comment6.target=void\ addLamborghini(Lamborghini)
comment6.text=\r\n\ adds\ a\ new\ Lamborghini\ to\ the\ inventory\r\n\ @param\ newLamborghini.\ Lamborghini\ object.\ The\ new\ car\ to\ be\ added.\ Can't\ be\ null\r\n
comment7.params=startYear\ endYear
comment7.target=int\ howManyBetweenTheseYears(int,\ int)
comment7.text=\r\n\ returns\ the\ number\ of\ Lamborghinis\ in\ inventory\ whose\ model\ year\ is\ between\ these\ years\r\n\ @param\ startYear\ int.\ The\ first\ year\ in\ the\ range.\ Needs\ to\ be\ between\ 1920\ and\ 2018\r\n\ @return\ count\ int.\ How\ many\ cars\ matched\ the\ condition\r\n
comment8.params=
comment8.target=int\ howManyAreRearWheelDrive()
comment8.text=\r\n\ returns\ the\ number\ of\ Lamborghinis\ that\ are\ rear-wheel\ drive\r\n\ @return\ count\ int.\ The\ number\ of\ rear-wheel\ drive\ lambos\r\n
comment9.params=year
comment9.target=java.util.ArrayList\ getCarsFromThisYear(int)
comment9.text=\r\n\ creates\ an\ array\ list\ with\ the\ cars\ from\ the\ provided\ year\r\n\ @param\ year\ int.\ The\ year\ you\ are\ researching.\ Needs\ to\ be\ between\ 1920\ and\ 2018\r\n\ @return\ ArrayList<Lamborghini>\ will\ be\ empty\ if\ no\ mtaches.\ \r\n
numComments=13
