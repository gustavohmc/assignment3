#BlueJ class context
comment0.params=
comment0.target=Author()
comment0.text=\r\n\ Default\ constructor\ for\ objects\ of\ class\ Author.\r\n
comment1.params=firstName\ lastName\ middleName\ yearBorn\ monthBorn\ dayBorn\ yearDied\ monthDied\ dayDied\ pseudoFirst\ pseudoLast\ pseudoMiddle
comment1.target=Author(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Non-default\ constructor\ for\ objects\ of\ class\ Author.\r\n\ This\ is\ the\ most\ verbose\ means\ of\ describing\ an\ Author.\r\n\ All\ the\ attributes\ of\ this\ class'\ components\ are\ provided\ here.\r\n\ Contrary\ to\ the\ other\ constructors,\ this\ one\ doesn't\ allow\ a\ death-date\ to\ be\ optional.\r\n\ @param\ firstname\ \ \ \ \ this\ person's\ given\ name\r\n\ @param\ lastName\ \ \ \ \ \ this\ person's\ surname\r\n\ @param\ middleName\ \ \ \ one\ middle\ name\ given\ to\ the\ author\ by\ their\ family\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ [optional\:\ null\ means\ "no\ middle\ name"]\r\n\ @param\ yearBorn\ \ \ \ \ \ their\ year\ of\ birth,\ expressed\ in\ the\ Common\ Era\r\n\ @param\ monthBorn\ \ \ \ \ their\ month\ of\ birth,\ in\ the\ range\ Date.JANUARY\ to\ Date.DECEMBER\r\n\ @param\ dayBorn\ \ \ \ \ \ \ their\ day\ of\ birth,\ in\ the\ range\ 1\ to\ (max\ day\ number\ of\ that\ month\ and\ year)\r\n\ @param\ yearDied\ \ \ \ \ \ their\ year\ of\ death,\ expressed\ in\ the\ Common\ Era\r\n\ @param\ monthDied\ \ \ \ \ their\ month\ of\ death;\ same\ range\ as\ monthBorn\r\n\ @param\ dayDied\ \ \ \ \ \ \ their\ day\ of\ death;\ same\ range\ as\ dayBorn\r\n\ @param\ pseudoFirst\ \ \ the\ first\ name\ that\ appears\ in\ their\ nom\ de\ plume\r\n\ @param\ pseudoLast\ \ \ \ the\ last\ name\ that\ appears\ in\ their\ nom\ de\ plume\r\n\ @param\ pseudoMiddle\ \ one\ middle\ name\ for\ the\ nom\ de\ plume,\ if\ applicable\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ if\ all\ the\ pseudo-params\ are\ null\ will\ the\ pseudoname\ be\ considered\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ non-existent.\ \ Every\ other\ combination\ will\ be\ passed\ on\ to\ Name()\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ that\ class'\ interpretation.\r\n
comment10.params=
comment10.target=Name\ getPseudonym()
comment10.text=\r\n\ Accessor.\r\n\ @return\ \ pseudonym\ attribute\r\n
comment11.params=name
comment11.target=void\ getName(Name)
comment11.text=\r\n\ Mutator.\ \ No\ validation\ necessary.\r\n\ @param\ \ name\ attribute\r\n
comment12.params=born
comment12.target=void\ getDateBorn(Date)
comment12.text=\r\n\ Mutator.\ \ No\ validation\ performed,\ though\ in\ the\ best\ case,\ it'd\ be\ before\ 'died'.\r\n\ @param\ \ born\ attribute\r\n
comment13.params=died
comment13.target=void\ getDateDied(Date)
comment13.text=\r\n\ Mutator.\ \ No\ validation\ performed,\ though\ in\ the\ best\ case,\ it'd\ be\ after\ 'born'.\r\n\ @param\ \ died\ attribute\r\n
comment14.params=pseudonym
comment14.target=void\ getPseudonym(Name)
comment14.text=\r\n\ Mutator.\ \ No\ validation\ necessary.\r\n\ @param\ \ pseudonym\ attribute\r\n
comment2.params=name\ born\ died\ pseudonym
comment2.target=Author(Name,\ Date,\ Date,\ Name)
comment2.text=\r\n\ Non-default\ constructor\ for\ objects\ of\ class\ Author.\r\n\ This\ constructor\ is\ used\ if\ all\ components\ of\ author\ have\ already\ been\ created.\r\n\ @param\ name\ \ \ \ \ \ Name\ object\ that\ represents\ the\ real\ name\ given\ to\ the\ author\ at\ birth\r\n\ @param\ born\ \ \ \ \ \ Date\ object\ that\ describes\ the\ author's\ recorded\ birthday\r\n\ @param\ died\ \ \ \ \ \ Date\ the\ author\ kicked\ the\ bucket\ [optional\:\ null\ means\ "hasn't\ died\ yet"]\r\n\ @param\ pseudonym\ a\ nom\ de\ plume\ that\ the\ author\ published\ works\ by\ [optional\:\ null\ if\ no\ pseudonym]\r\n
comment3.params=name\ born\ died
comment3.target=Author(Name,\ Date,\ Date)
comment3.text=\r\n\ Non-default\ constructor\ for\ objects\ of\ class\ Author.\r\n\ Similar\ to\ the\ preceding\ constructor,\ this\ one\ takes\ pre-determined\ info,\r\n\ but\ explicitly\ describes\ authors\ that\ were\ known\ not\ to\ have\ a\ pseudonym.\r\n\ @param\ name\ \ \ \ \ \ Name\ object\ that\ represents\ the\ real\ name\ given\ to\ the\ author\ at\ birth\r\n\ @param\ born\ \ \ \ \ \ Date\ object\ that\ describes\ the\ author's\ recorded\ birthday\r\n\ @param\ died\ \ \ \ \ \ Date\ the\ author\ kicked\ the\ bucket\ [optional\:\ null\ means\ "hasn't\ died\ yet"]\r\n
comment4.params=name\ born\ died\ pseudonym
comment4.target=void\ init(Name,\ Date,\ Date,\ Name)
comment4.text=\r\n\ An\ initializer.\ \ Does\ prep\ work\ common\ to\ 3\ constructors.\r\n\ @param\ name\ \ \ \ \ \ Name\ object\ that\ represents\ the\ real\ name\ given\ to\ the\ author\ at\ birth\r\n\ @param\ born\ \ \ \ \ \ Date\ object\ that\ describes\ the\ author's\ recorded\ birthday\r\n\ @param\ died\ \ \ \ \ \ Date\ the\ author\ kicked\ the\ bucket\ [optional\:\ null\ means\ "hasn't\ died\ yet"]\r\n
comment5.params=
comment5.target=boolean\ isAuthorAlive()
comment5.text=\r\n\ A\ more\ common\ way\ of\ asking,\ "has\ (s)he\ not\ died\ yet?"\r\n\ @return\ \ true\:\ (s)he\ has\ a\ date\ of\ death\ on\ record;\ false\ otherwise\r\n
comment6.params=
comment6.target=int\ getAgeYearsOfAuthor()
comment6.text=\r\n\ Answers\ the\ question,\ "how\ old\ would\ the\ author\ be\ if\ alive\ today?"\r\n\ I\ guess\ corpses\ could\ be\ said\ to\ age\ -\ like\ a\ fine\ wine?\r\n\ @return\ \ the\ difference\ of\ the\ author's\ birth\ year\ and\ this\ year\r\n\ \ \ \ \ \ \ \ \ \ (Never\ meant\ to\ be\ a\ perfect\ answer.\ \ 'Today'\ is\ treated\ as\ Jan\ 1,\ 2013.)\r\n
comment7.params=
comment7.target=Name\ getName()
comment7.text=\r\n\ Accessor.\r\n\ @return\ \ name\ attribute\r\n
comment8.params=
comment8.target=Date\ getDateBorn()
comment8.text=\r\n\ Accessor.\r\n\ @return\ \ born\ attribute\r\n
comment9.params=
comment9.target=Date\ getDateDied()
comment9.text=\r\n\ Accessor.\r\n\ @return\ \ died\ attribute\r\n
numComments=15
